
Assignment 3:

Q1. What are the characteristics of the tuples? Is tuple immutable?

Ans:

Characteristics of the tuples :

1. Tuples are indexed.
2. Tuples are ordered.
3. Tuples are immutable.
4. Tuples can contain duplicate items. 


Tuples are immutable . It is not going to allow you to change any element at a particular index.

Q2. What are the two tuple methods in python? Give an example of each method. Give a reason why
tuples have only two in-built methods as compared to Lists.

Ans :

There are two tuple methods count() and index().

Because of immutability tuples have only two in-built methods as compared to Lists.  

Q3.  Which collection datatypes in python do not allow duplicate items? Write a code using a set to remove
duplicates from the given list.


List = [1, 1, 1, 2, 1, 3, 1, 4, 2, 1, 2, 2, 2, 3, 2, 4, 3, 1, 3, 2, 3, 3, 3, 4, 4, 1, 4, 2, 4, 3, 4, 4]

Ans:

Set Collection datatypes in python do not allow duplicate items.

List = [1, 1, 1, 2, 1, 3, 1, 4, 2, 1, 2, 2, 2, 3, 2, 4, 3, 1, 3, 2, 3, 3, 3, 4, 4, 1, 4, 2, 4, 3, 4, 4]

set(List)


Q4. Explain the difference between the union() and update() methods for a set. Give an example of
each method.

Ans:

The union() method returns a set that contains all items from the original set, and all items from the specified set(s).

If an item is present in more than one set, the result will contain only one appearance of this item.

A = {'a', 'b', 'c'}
B = {'e', 'a', 'f'}
Z=A.union(B)
print(Z)


The update() method updates the current set, by adding items from another set (or any other iterable).

If an item is present in both sets, only one appearance of this item will be present in the updated set.


A = {'a', 'b', 'c'}
B = {'e', 'a', 'f'}
A.update(B)
print(A)


Q5. What is a dictionary? Give an example. Also, state whether a dictionary is ordered or unordered.

Ans:

Dictionaries are used to store data values in key:value pairs.

A dictionary is a collection which is ordered, changeable and do not allow duplicates.


Dict = {1: 'TATA', 2: 'IPL', 3: 2023}
print(Dict)


Q6. Can we create a nested dictionary? If so, please give an example by creating a simple one-level
nested dictionary.

Ans:

Yes we create a nested dictionary.

ipl = {
    "team": "CSK",
    "year": 2023,
    "match": {
        "opponent": "MI",
        "ground": "Mumbai"
    }
}

print(ipl)


Q7. Using setdefault() method, create key named topics in the given dictionary and also add the value of
the key as this list ['Python', 'Machine Learningâ€™, 'Deep Learning']


dict1 = {'language' : 'Python', 'course': 'Data Science Masters'}

Ans:

dict1.setdefault('topics')


dict1['topics']= ['Python', 'Machine Learning', 'Deep Learning']


Q 8 . What are the three view objects in dictionaries? Use the three in-built methods in python to display
these three view objects for the given dictionary.


dict1 = {'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', ' New Zealand']}

Ans: 

There are three view objects for dictionaries: dict_keys, dict_values, and dict_items.

dict1 = {'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', ' New Zealand']}

dict1.keys() 

O/P : dict_keys(['Sport', 'Teams'])

dict1.values()

O/P : dict_values(['Cricket', ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', ' New Zealand']])

dict1.items()

O/P : dict_items([('Sport', 'Cricket'), ('Teams', ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', ' New Zealand'])])



